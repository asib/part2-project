\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k+kd}{public} \PYG{k+kt}{void} \PYG{n+nf}{process}\PYG{o}{(}\PYG{n}{APDU} \PYG{n}{apdu}\PYG{o}{)} \PYG{o}{\PYGZob{}}
  \PYG{k+kt}{byte}\PYG{o}{[]} \PYG{n}{buffer} \PYG{o}{=} \PYG{n}{apdu}\PYG{o}{.}\PYG{n+na}{getBuffer}\PYG{o}{();}

  \PYG{k}{if} \PYG{o}{(!}\PYG{n}{apdu}\PYG{o}{.}\PYG{n+na}{isISOInterindustryCLA}\PYG{o}{())} \PYG{o}{\PYGZob{}}
    \PYG{k}{if} \PYG{o}{(!}\PYG{n}{locked}\PYG{o}{)} \PYG{o}{\PYGZob{}}
      \PYG{k}{switch} \PYG{o}{(}\PYG{n}{buffer}\PYG{o}{[}\PYG{n}{ISO7816}\PYG{o}{.}\PYG{n+na}{OFFSET\PYGZus{}INS}\PYG{o}{])} \PYG{o}{\PYGZob{}}
        \PYG{k}{case} \PYG{n}{GENERATE\PYGZus{}KEY\PYGZus{}PAIR}\PYG{o}{:}
          \PYG{n}{processGenerateKeyPair}\PYG{o}{(}\PYG{n}{apdu}\PYG{o}{);}
          \PYG{k}{break}\PYG{o}{;}
        \PYG{k}{case} \PYG{n}{STORE\PYGZus{}SIGNATURE}\PYG{o}{:}
          \PYG{n}{processStoreSignature}\PYG{o}{(}\PYG{n}{apdu}\PYG{o}{);}
          \PYG{k}{break}\PYG{o}{;}
        \PYG{k}{case} \PYG{n}{CHECK\PYGZus{}STORED\PYGZus{}DATA}\PYG{o}{:}
          \PYG{n}{processCheckStoredData}\PYG{o}{(}\PYG{n}{apdu}\PYG{o}{);}
          \PYG{k}{break}\PYG{o}{;}
        \PYG{k}{case} \PYG{n}{LOCK\PYGZus{}CARD}\PYG{o}{:}
          \PYG{n}{processLockCard}\PYG{o}{(}\PYG{n}{apdu}\PYG{o}{);}
          \PYG{k}{break}\PYG{o}{;}
        \PYG{k}{case} \PYG{n}{BASIC\PYGZus{}AUTH}\PYG{o}{:}
        \PYG{k}{case} \PYG{n}{INITIATE\PYGZus{}AUTH}\PYG{o}{:}
          \PYG{n}{ISOException}\PYG{o}{.}\PYG{n+na}{throwIt}\PYG{o}{(}\PYG{n}{ISO7816}\PYG{o}{.}\PYG{n+na}{SW\PYGZus{}COMMAND\PYGZus{}NOT\PYGZus{}ALLOWED}\PYG{o}{);}
          \PYG{k}{break}\PYG{o}{;}
      \PYG{o}{\PYGZcb{}}
    \PYG{o}{\PYGZcb{}} \PYG{k}{else} \PYG{o}{\PYGZob{}}
      \PYG{c+c1}{// ...}
    \PYG{o}{\PYGZcb{}}
  \PYG{o}{\PYGZcb{}}
\PYG{o}{\PYGZcb{}}
\end{Verbatim}
